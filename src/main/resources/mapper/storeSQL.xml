<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="store">

	<insert id="addStore" parameterType="s">
		insert into store
		values
		(store_seq.nextval,
		#{storeName},
		#{ownerNo},
		#{address},
		#{phone},
		#{content},
		#{openHour},
		#{closedDay},
		#{category},
		#{withEatCate},
		#{whereEatCate}
		)
	</insert>

	<select id="selectStoreNo" resultType="_int">
		select max(store_no) as
		storeNo
		from store
	</select>

	<insert id="insertImg" parameterType="si">
		insert into store_img
		values
		(storeimg_seq.nextval,
		#{storeNo},
		#{imgpath}
		)
	</insert>

	<insert id="reviewWrite" parameterType="r">
		insert into review
		values
		(review_seq.nextval,
		85,
		'user01',
		#{rating},
		#{content},
		#{reviewImg},
		to_char(sysdate, 'yyyy-mm-dd')
		)
	</insert>

	<select id="storeList" parameterType="map" resultType="s">
		select * from
			(select row_number() over (order by rnum desc) as rnum1, rb.* from
			(select rownum as rnum, b.* from
			(select
				store_no as storeNo,
				store_name as storeName,
				owner_no as ownerNo,
				address,
				phone,
				content,
				open_hour as openHour,
				closed_day as closedDay,
				category,
				witheat_cate as
				withEatCate,
				whereeat_cate as whereEatCate,
				(select imgpath from store_img si where storeimg_no = (select
				min(storeimg_no) from store_img si2 where si2.store_no = s.store_no))
				as thumbNail
			from store s order by storeNo desc)b)rb order by 3 desc)
		where rnum between #{start} and #{end} 
	</select>
	

		<select id="storeTagList" parameterType="map" resultType="s">
		      select
		      * from
		      (select row_number() over (order by rnum desc) as rnum1, rb.* from
		      (select rownum as rnum, b.* from
		      (select
		      store_no as storeNo,
		      store_name as storeName,
		      owner_no as ownerNo,
		      address,
		      phone,
		      content,
		      open_hour as openHour,
		      closed_day as closedDay,
		      category,
		      witheat_cate as
		      withEatCate,
		      whereeat_cate as whereEatCate,
		      (select imgpath from store_img si where storeimg_no = (select
		      min(storeimg_no) from store_img si2 where si2.store_no = s.store_no))
		      as thumbNail
		      from store s order by storeNo desc)b)rb order by 3 desc)
		      where rnum between
		      #{start} and #{end} and category = ${tagValue}
		   </select>

	<select id="selectTag" parameterType="map" resultType="s">
		select * from
			(select row_number() over (order by rnum desc) as rnum1, rb.* from
			(select rownum as rnum, b.* from
			(select
				store_no as storeNo,
				store_name as storeName,
				owner_no as ownerNo,
				address,
				phone,
				content,
				open_hour as openHour,
				closed_day as closedDay,
				category,
				witheat_cate as
				withEatCate,
				whereeat_cate as whereEatCate,
				(select imgpath from store_img si where storeimg_no = (select
				min(storeimg_no) from store_img si2 where si2.store_no = s.store_no))
				as thumbNail from store s order by storeNo desc)b where category = #{category})rb order by 3 desc)
		where rnum between #{start} and #{end}
	</select>



	<select id="selectOneStoreAjax" parameterType="sj" resultType="sj">
		select
			store_no as storeNo, 
			store_name as storeName,
			open_hour as openHour,
			address,
			phone,
			closed_day as closedDay,
			category,
			content,
			storeimg_no as storeImgNo,
			imgpath
		from store 
		join store_img using(store_no)
		where store_no = #{storeNo}
		ORDER BY storeimg_no asc
	</select>


	<select id="selectOneStore" parameterType="_int" resultType="s">
		select
			store_no as storeNo, 
			store_name as storeName,
			open_hour as openHour,
			address,
			phone,
			closed_day as closedDay,
			category,
			content
		from store 
		where store_no = #{_parameter}
	</select>
	


	<select id="countAllList" resultType="_int">
		select count(*) from store
	</select>

	<insert id="addMenu" parameterType="me">
		insert into menu values
		(menu_seq.nextval,
		#{storeNo},
		#{menuName},
		#{menuPrice},
		#{menuImg}
		)
	</insert>
	
	<select id="selectMyStore" parameterType="o" resultType="s">
		select
			a.store_no as storeNo,
			store_name as storeName,
			open_hour as openHour,
			address,
			phone,
			closed_day as closedDay,
			category,
			witheat_cate as withEatCate,
			whereeat_cate as whereEatCate,
			content,
			imgpath as storeImgList
		from store a
		left join store_img b
		on a.store_no = b.store_no
		where owner_no = #{ownerNo}
	</select>
  
	<select id="searchStore" parameterType="int" resultType="s">
		select 
			store_no as storeNo
		from store 
		where owner_no = #{ownerNo}
	</select>
	

	<select id="countTagList" parameterType="string" resultType="_int">
		select count(*) from store where category = #{category}
	</select>
	
	<select id="searchStoreList" parameterType="string" resultType="s">
		select * from
			(select row_number() over (order by rnum desc) as rnum1, rb.* from
			(select rownum as rnum, b.* from
			(select
				store_no as storeNo,
				store_name as storeName,
				owner_no as ownerNo,
				address,
				phone,
				content,
				open_hour as openHour,
				closed_day as closedDay,
				category,
				witheat_cate as
				withEatCate,
				whereeat_cate as whereEatCate,
				(select imgpath from store_img si where storeimg_no = (select
				min(storeimg_no) from store_img si2 where si2.store_no = s.store_no))
				as thumbNail from store s order by storeNo desc)b where category = #{category})rb order by 3 desc)
		where rnum between 1 and 9
	</select>
	

	<insert id="insertReserve" parameterType="r">
		insert into reserve
		values(RESERVE_SEQ.NEXTVAL, #{memberNo}, #{storeNo}, #{storeName}, to_char(sysdate,'yyyy-mm-dd'),
		#{eatDate}, #{eatTime}, #{eatNum})
	</insert>
	

	<select id="menuList" parameterType="int" resultType="me">
		select menu_no as menuNo,
        name as menuName,
        price as menuPrice,
        menu_img as menuImg
		from menu
		where store_no = #{storeNo}
		order by 1 DESC
	</select>
	
	<delete id="deleteMenu" parameterType="int">
		delete from menu
		where menu_No = #{menuNo}
	</delete>
	
	<select id="readOneMenu" parameterType="int" resultType="me">
		select menu_no as menuNo,
        name as menuName,
        price as menuPrice,
        menu_img as menuImg
		from menu
		where menu_No = #{menuNo}
	</select>
	
	<update id="updateMenu" parameterType="me">
		update menu
		set
		name = #{menuName},
		price = #{menuPrice},
		menu_img = #{menuImg}
		where menu_no = #{menuNo}
	</update>
</mapper>