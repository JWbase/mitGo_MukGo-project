<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="member">
	<select id="checkId" parameterType="string" resultType="string">
		select member_id as memberId
		from member
		where member_id = #{checkId}
	</select>
	<select id="pwChkMember" parameterType="m" resultType="m">
		select member_id as memberId
		from member
		where member_no = #{memberNo} and member_pw = #{memberPw}
	</select>
	<insert id="insertMember" parameterType="m">
		insert into member
		values(member_seq.nextval,2,#{memberId}, #{memberPw}, #{memberName}, #{memberPhone}, to_char(sysdate,'yyyy-mm-dd'))
	</insert>
	<select id="selectOneMember" parameterType="m" resultType="m">
		select 
			member_no as memberNo,
			member_class as memberClass,
			member_id as memberId,
			member_pw as memberPw,
			member_name as memberName,
			member_phone as memberPhone,
			m_enroll_date as MemEnrollDate
		from member
		where member_id=#{memberId} and member_pw=#{memberPw}
	</select>
	<update id="updateMember" parameterType="m">
		update member
		set member_pw=#{memberPw}
		where member_no=#{memberNo}
	</update>
	<delete id="deleteMember" parameterType="int">
		delete member
		where member_no = #{memberNo}
	</delete>
	
	<!-- 일반회원 목록 조회 -->
	<select id="memberList" parameterType="map" resultType="m">
		select
			member_no as memberNo,
			member_id as memberId,
			member_name as memberName,
			member_phone as memberPhone,
			m_enroll_date as memEnrollDate
		from(select rownum as rnum, n.* from (select * from member order by member_no desc) n) 
		where rnum between #{start} and #{end}
	</select>
	
	<!-- 일반회원 목록 전체 개수-->
	<select id="countAllMember" resultType="int">
		select
			count(*)
		from member
	</select>
	
	<!-- 일반회원 검색 -->
	<select id="searchMember" parameterType="map" resultType="m">
		select
			member_no as memberNo,
			member_id as memberId,
			member_name as memberName,
			member_phone as memberPhone,
			m_enroll_date as memEnrollDate
		from(select rownum as rnum, n.* from (select * from member order by member_no desc) n) 
		where rnum between #{start} and #{end}
		<choose>
			<when test="type.equals('id')">
			 and member_id like '%'||#{keyword}||'%' 
			</when>
			<when test="type.equals('name')">
			and member_name like '%'||#{keyword}||'%' 
			</when>			
		</choose>
	</select>
	
	<!-- 일반회원 검색 전체 카운팅 -->
	<select id="searchMemberCount" parameterType="map" resultType="int">
		select count(*) from member
		<choose>
			<when test="type.equals('id')">
			 where  member_id like '%'||#{keyword}||'%' 
			</when>
			<when test="type.equals('name')">
			where member_name like '%'||#{keyword}||'%' 
			</when>			
		</choose>
	</select>
	
	<select id="searchMemberId" parameterType="m" resultType="string">
		select 
			member_id as memberId
		from member
		where member_name = #{memberName} and member_phone = ${memberPhone}
	</select>
	<select id="searchNormalPw" parameterType="m" resultType="int">
		select 
			member_no as memberNo
		from member
		where member_id = #{memberId} and member_phone = ${memberPhone}
	</select>
	<select id="selectJoinedMember" parameterType="m" resultType="string">
		select member_id as memberId
		from member
		where member_id = #{memberId}
	</select>
</mapper>
